===============================
 Task 100-matrix_mul
===============================

This is the test of the function
``matrix_mul()``.

===============================

``matrix_mul()`` returns the mul of two matrix.

Multiplication
=======

::
	>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]

::
	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22], [23, 34]]

::
	>>> lazy_matrix_mul([[2]], [[2]])
	[[4]]

Errors
======

::
	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[7, 8], [9, 10], [11, 12]])
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied

::
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "hola"]])
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

::
	>>> lazy_matrix_mul([[1, "hola"], [3, 4]], [[1, 2], [3, 5]])
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

::
	>>> lazy_matrix_mul("hola", [[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: m_a must be a list

::
	>>> lazy_matrix_mul([[]])
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

::
	>>> lazy_matrix_mul([[]], [[]])
	Traceback (most recent call last):
	ValueError: m_a can't be empty

::
	>>> lazy_matrix_mul([], [])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

::
	>>> lazy_matrix_mul([[1, 2]], [[]])
	Traceback (most recent call last):
	ValueError: m_b can't be empty

::
	>>> matrix_mul((2, 6), (5, 8))
	Traceback (most recent call last):
	TypeError: m_a must be a list

::
	>>> matrix_mul([2, 5], (5, 8))
	Traceback (most recent call last):
	TypeError: m_b must be a list

::
	>>> matrix_mul([[1, 2], [2]], [[1, 2], [2, 3]])
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size
