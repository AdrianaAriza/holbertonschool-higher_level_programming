===============================
 Task 2-matrix_divided
===============================

This is the test of the function
``matriz_divided()``.

===============================

``matrix_divided()`` devides all the ellements of a matrix by a given number.

Numbers
=======

::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::
	>>> matrix_divided(matrix, 0.3)
	[[3.33, 6.67, 10.0], [13.33, 16.67, 20.0]]

Errors
=======

::
	>>> matrix = [[1, 2, 3], [4, 5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

::
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
    	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

::
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

::
	>>> matrix = [[1, 2, 3], [4, 5, "HOLA"]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "HOLA")
	Traceback (most recent call last):
	TypeError: div must be a number

::
	>>> matrix = []
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
